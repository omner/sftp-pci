---
AWSTemplateFormatVersion: '2010-09-09'
Description: A basic template to enable security services to a given VPC.
Parameters:
  VPCProduction:
    Description: ID of the Production VPC where the SFTPServer will be deployed.
    Type: AWS::EC2::VPC::Id
Resources:
  CloudWatchTrailLogRole:
    Description: IAM role used by VPC to log data to CloudWatch
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: FlowLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource: !GetAtt CloudTrailLogGroup.Arn
  CloudTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 400
  CloudTrailS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      BucketName: !Sub 'CloudTrail-${AWS::Region}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  CloudTrailS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref CloudTrailS3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailAclCheck
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:GetBucketAcl'
          Resource: !GetAtt CloudTrailS3Bucket
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service: 'cloudtrail.amazonaws.com'
          Action: 's3:PutObject'
          Resource: !Sub 'arn:aws:s3:::${CloudTrailS3Bucket}/AWSLogs/${AWS::AccountId}/*
  CloudTrailProd:
    # DependsOn:
    #   - CloudTrailLogGroup
    #   - CloudWatchTrailLogRole
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: !Sub 'CloudTrail-${AWS::Region}'
      CloudWatchLogsLogGroupArn: !GetAtt CloudTrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CloudWatchTrailLogRole.Arn
      S3BucketName: !Ref CloudTrailS3Bucket
      EnableLogFileValidation: true
      IsLogging: true
      IsMultiRegionTrail: false
      IncludeGlobalServiceEvents: true
Outputs:
  CloudTrail:
    Value: !Ref CloudTrailProd
  CloudTrailLogGroupID:
    Value: !Ref CloudTrailLogGroup
  CloudTrailBucket:
    Value: !Ref CloudTrailS3BucketPolicy
