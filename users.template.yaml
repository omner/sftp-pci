---
AWSTemplateFormatVersion: 2010-09-09
Description: Provides the base configuration for a SFTPServer user and its respective
  role and policy. It builds a s3 bucket with versioning, encryption and LC policy.
Metadata:
  Stack:
    Value: 1
  VersionDate:
    Value: 20200325
  Identifier:
    Value: template-users
  Input:
    Description: None
  Output:
    Description: Outputs ID of all deployed resources
Resources:
  EncryptedS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      BucketName: !Sub 'sftp-${AWS::Region}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - Id: GlacierRule
          Status: Enabled
          ExpirationInDays: '400'
          Transitions:
            - TransitionInDays: '90'
              StorageClass: GLACIER
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
  TrUserRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - transfer.amazonaws.com
          Action:
          - sts:AssumeRole
  TrUserPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
            - s3:ListBucket
            - s3:GetBucketLocation
          Resource: !GetAtt EncryptedS3Bucket.Arn
        - Effect: Allow
          Action:
          - s3:PutObject
          - s3:GetObject
          - s3:DeleteObjectVersion
          - s3:DeleteObject
          - s3:GetObjectVersion
          Resource: !Sub "${EncryptedS3Bucket.Arn}/*"
      Roles:
      - !Ref TrUserRole
  TrUserSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: SFTP/usecret
      Description: "This secret represent an user for SFTPServer. Keep SFTP/User format"
      GenerateSecretString:
        GenerateStringKey: "Password"
        PasswordLength: 30
        ExcludeCharacters: '"@/\;#`,!?[]^'
        SecretStringTemplate:
          !Sub
          - '{"Role": "${TransferUserRole}","HomeDirectoryDetails": "[{\"Entry\": \"/\", \"Target\": \"/${TransferBucketName}/${!Transfer:UserName}\"}]","PublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDXNru8HA8cxsgJV00YYpCK7H56gCkCWHqKwQp8O5Euqzgelvr3izYtUprW8hHre4Rup5c++4duetqxqHMuNvkOSrgocrSeDStPaRJxFPxtx/qsJ/IWYd9l6p6RnMMXvqDf4pCZ+N1WHDBv2ke59/oMDUeEws2pPgPv6lLfwnmtgkm9/AMROJw6js9ioUatFaTkZcCo2tf59jP3x3LzBnsIFZ3R5ex7Yb8X20LQpQsGzZqqE2NrOdtECfC/xZzt3uUs+O8AHelAC/gSNBe5YZIiRhwY53UH6s0Zc+s+Er6hVfPQ5xOLhYyFNMXLDarsE+ellNGKiLxJ+7s7kQ9rm+L5"}'
          - TransferUserRole: !GetAtt TrUserRole.Arn
            TransferBucketName: !Ref EncryptedS3Bucket
  TrUsergfnorte:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: SFTP/gfnorte
      Description: "This secret represent an user for SFTPServer. Keep SFTP/User format"
      GenerateSecretString:
        GenerateStringKey: "Password"
        PasswordLength: 30
        ExcludeCharacters: '"@/\;#`,!?[]^'
        SecretStringTemplate:
          !Sub
          - '{"Role": "${TransferUserRole}","HomeDirectoryDetails": "[{\"Entry\": \"/\", \"Target\": \"/${TransferBucketName}/${!Transfer:UserName}\"}]"}'
          - TransferUserRole: !GetAtt TrUserRole.Arn
            TransferBucketName: !Ref EncryptedS3Bucket
Outputs:
  UserRole:
    Value: !GetAtt TrUserRole.Arn
  BucketName:
    Value: !Ref EncryptedS3Bucket
  SecretName:
    Value: !Ref TrUserSecret
...
